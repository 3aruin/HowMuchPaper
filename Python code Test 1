import wolframalpha

# WolframAlpha API key
app_id = 'YOUR_APP_ID'

# Query WolframAlpha for number of working days in the last 30 days
query = 'number of working days in the last 30 days'

client = wolframalpha.Client(app_id)
res = client.query(query)

# Extract the result for working days
working_days = next(res.results).text
working_days = int(working_days)  # Convert the result to an integer
print(f"Number of working days: {working_days}")

# Variables for paper requirement calculation
number_of_printers = 17
sheets_per_printer_per_day = 100
sheets_per_ream = 500
reams_per_case = 10
buffer_percentage = 0.10

# Calculations for paper requirements
total_sheets = number_of_printers * sheets_per_printer_per_day * working_days
total_reams = total_sheets / sheets_per_ream
total_cases = total_reams / reams_per_case

# Adding buffer stock
total_cases_with_buffer = total_cases * (1 + buffer_percentage)

# Print the output for paper recommendation
print(f"Total sheets used in {working_days} working days: {total_sheets}")
print(f"Total reams needed: {total_reams}")
print(f"Total cases needed (without buffer): {total_cases}")
print(f"Total cases needed (with buffer): {round(total_cases_with_buffer, 2)}")
